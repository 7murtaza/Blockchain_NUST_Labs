{
	"id": "b31a7818c384c404f739708e2d3f1ab0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"week8/lab-01-08-2023/example1_4.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract Enum {\n    Exam public e1 = Exam(0);\n    // Exam public e1 = Exam.Scholarship;\n    enum Exam {\n        Checking,\n        Pass,\n        Fail,\n        Scholarship\n    }\n\n    Exam public e3 = Exam(3);\n\n    // What do you think will be the uint value returned by e3 in this case?\n    // it will return 3, as it is refering to scholarship\n\n    /*\na) Observe and Run the example given in section 1.4 and 1.5.\nb) Using the example given in section 1.10 as a guide, make a function named\nFail that updates the state of ‘e1’ to Fail, only if ‘e1’ is in the Checking state.\nc) Make a function named Scholarship, that updates the state of ‘e1’ to\nScholarship only if the previous state of e1 is ‘Pass’.\nd) Make a function named idelete that resets the state of e1 to its default value.\n(See section 1.9)\n*/\n\n    function Fail() public {\n        if (e1 == Exam.Checking)\n        e1 = Exam.Fail;\n    \n    }\n\n    function Scholarship() public {\n        if (e1 == Exam.Pass)\n        e1 = Exam.Scholarship;\n    }\n\n    function idelete() public {\n        delete e1;\n    }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"week8/lab-01-08-2023/example1_4.sol": {
				"Enum": {
					"abi": [
						{
							"inputs": [],
							"name": "Fail",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Scholarship",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "e1",
							"outputs": [
								{
									"internalType": "enum Enum.Exam",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "e3",
							"outputs": [
								{
									"internalType": "enum Enum.Exam",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "idelete",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"week8/lab-01-08-2023/example1_4.sol\":57:1139  contract Enum {... */\n  mstore(0x40, 0x80)\n    /* \"week8/lab-01-08-2023/example1_4.sol\":99:100  0 */\n  0x00\n    /* \"week8/lab-01-08-2023/example1_4.sol\":94:101  Exam(0) */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  tag_2\n  tag_3\n  jump\t// in\ntag_2:\ntag_1:\n    /* \"week8/lab-01-08-2023/example1_4.sol\":77:101  Exam public e1 = Exam(0) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  tag_5\n  tag_3\n  jump\t// in\ntag_5:\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"week8/lab-01-08-2023/example1_4.sol\":260:261  3 */\n  0x03\n    /* \"week8/lab-01-08-2023/example1_4.sol\":255:262  Exam(3) */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_6\n  jumpi\n  tag_7\n  tag_3\n  jump\t// in\ntag_7:\ntag_6:\n    /* \"week8/lab-01-08-2023/example1_4.sol\":238:262  Exam public e3 = Exam(3) */\n  0x00\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  tag_9\n  tag_3\n  jump\t// in\ntag_9:\ntag_8:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"week8/lab-01-08-2023/example1_4.sol\":57:1139  contract Enum {... */\n  callvalue\n  dup1\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  pop\n  jump(tag_11)\n    /* \"#utility.yul\":7:187   */\ntag_3:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"week8/lab-01-08-2023/example1_4.sol\":57:1139  contract Enum {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"week8/lab-01-08-2023/example1_4.sol\":57:1139  contract Enum {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x552670ff\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x56800b52\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa2c2d666\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xce251a30\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xea70a017\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"week8/lab-01-08-2023/example1_4.sol\":883:975  function Fail() public {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"week8/lab-01-08-2023/example1_4.sol\":238:262  Exam public e3 = Exam(3) */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"week8/lab-01-08-2023/example1_4.sol\":77:101  Exam public e1 = Exam(0) */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"week8/lab-01-08-2023/example1_4.sol\":981:1078  function Scholarship() public {... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1084:1136  function idelete() public {... */\n    tag_7:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"week8/lab-01-08-2023/example1_4.sol\":883:975  function Fail() public {... */\n    tag_9:\n        /* \"week8/lab-01-08-2023/example1_4.sol\":926:939  Exam.Checking */\n      0x00\n        /* \"week8/lab-01-08-2023/example1_4.sol\":920:939  e1 == Exam.Checking */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_22\n      jumpi\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n    tag_22:\n        /* \"week8/lab-01-08-2023/example1_4.sol\":920:922  e1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"week8/lab-01-08-2023/example1_4.sol\":920:939  e1 == Exam.Checking */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_25\n      jumpi\n      tag_26\n      tag_24\n      jump\t// in\n    tag_26:\n    tag_25:\n      sub\n        /* \"week8/lab-01-08-2023/example1_4.sol\":916:963  if (e1 == Exam.Checking)... */\n      tag_27\n      jumpi\n        /* \"week8/lab-01-08-2023/example1_4.sol\":954:963  Exam.Fail */\n      0x02\n        /* \"week8/lab-01-08-2023/example1_4.sol\":949:951  e1 */\n      0x00\n      dup1\n        /* \"week8/lab-01-08-2023/example1_4.sol\":949:963  e1 = Exam.Fail */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      tag_29\n      tag_24\n      jump\t// in\n    tag_29:\n    tag_28:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"week8/lab-01-08-2023/example1_4.sol\":916:963  if (e1 == Exam.Checking)... */\n    tag_27:\n        /* \"week8/lab-01-08-2023/example1_4.sol\":883:975  function Fail() public {... */\n      jump\t// out\n        /* \"week8/lab-01-08-2023/example1_4.sol\":238:262  Exam public e3 = Exam(3) */\n    tag_11:\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"week8/lab-01-08-2023/example1_4.sol\":77:101  Exam public e1 = Exam(0) */\n    tag_15:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"week8/lab-01-08-2023/example1_4.sol\":981:1078  function Scholarship() public {... */\n    tag_18:\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1031:1040  Exam.Pass */\n      0x01\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1025:1040  e1 == Exam.Pass */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_31\n      jumpi\n      tag_32\n      tag_24\n      jump\t// in\n    tag_32:\n    tag_31:\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1025:1027  e1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1025:1040  e1 == Exam.Pass */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      tag_34\n      tag_24\n      jump\t// in\n    tag_34:\n    tag_33:\n      sub\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1021:1071  if (e1 == Exam.Pass)... */\n      tag_35\n      jumpi\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1055:1071  Exam.Scholarship */\n      0x03\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1050:1052  e1 */\n      0x00\n      dup1\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1050:1071  e1 = Exam.Scholarship */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      tag_37\n      tag_24\n      jump\t// in\n    tag_37:\n    tag_36:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1021:1071  if (e1 == Exam.Pass)... */\n    tag_35:\n        /* \"week8/lab-01-08-2023/example1_4.sol\":981:1078  function Scholarship() public {... */\n      jump\t// out\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1084:1136  function idelete() public {... */\n    tag_20:\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1127:1129  e1 */\n      0x00\n      dup1\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1120:1129  delete e1 */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"week8/lab-01-08-2023/example1_4.sol\":1084:1136  function idelete() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_24:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x21\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:305   */\n    tag_39:\n        /* \"#utility.yul\":273:274   */\n      0x04\n        /* \"#utility.yul\":266:271   */\n      dup2\n        /* \"#utility.yul\":263:275   */\n      lt\n        /* \"#utility.yul\":253:299   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":279:297   */\n      tag_47\n      tag_24\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":253:299   */\n    tag_46:\n        /* \"#utility.yul\":193:305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":311:436   */\n    tag_40:\n        /* \"#utility.yul\":355:362   */\n      0x00\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":373:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":390:430   */\n      tag_49\n        /* \"#utility.yul\":424:429   */\n      dup3\n        /* \"#utility.yul\":390:430   */\n      tag_39\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":311:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:567   */\n    tag_41:\n        /* \"#utility.yul\":497:506   */\n      0x00\n        /* \"#utility.yul\":530:561   */\n      tag_51\n        /* \"#utility.yul\":555:560   */\n      dup3\n        /* \"#utility.yul\":530:561   */\n      tag_40\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":517:561   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":573:714   */\n    tag_42:\n        /* \"#utility.yul\":665:707   */\n      tag_53\n        /* \"#utility.yul\":701:706   */\n      dup2\n        /* \"#utility.yul\":665:707   */\n      tag_41\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:708   */\n      mstore\n        /* \"#utility.yul\":573:714   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":720:952   */\n    tag_13:\n        /* \"#utility.yul\":818:822   */\n      0x00\n        /* \"#utility.yul\":856:858   */\n      0x20\n        /* \"#utility.yul\":845:854   */\n      dup3\n        /* \"#utility.yul\":841:859   */\n      add\n        /* \"#utility.yul\":833:859   */\n      swap1\n      pop\n        /* \"#utility.yul\":869:945   */\n      tag_55\n        /* \"#utility.yul\":942:943   */\n      0x00\n        /* \"#utility.yul\":931:940   */\n      dup4\n        /* \"#utility.yul\":927:944   */\n      add\n        /* \"#utility.yul\":918:924   */\n      dup5\n        /* \"#utility.yul\":869:945   */\n      tag_42\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":720:952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220410e7fb43f89335c0a08efdcbd594c4c91067068363ac995d29a5f21c5efb3ce64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"panic_error_0x21": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600060038111156100185761001761008e565b5b6000806101000a81548160ff0219169083600381111561003b5761003a61008e565b5b02179055506003808111156100535761005261008e565b5b600060016101000a81548160ff021916908360038111156100775761007661008e565b5b021790555034801561008857600080fd5b506100bd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610281806100cc6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063552670ff1461005c57806356800b5214610066578063a2c2d66614610084578063ce251a30146100a2578063ea70a017146100ac575b600080fd5b6100646100b6565b005b61006e61011c565b60405161007b9190610230565b60405180910390f35b61008c61012f565b6040516100999190610230565b60405180910390f35b6100aa610140565b005b6100b46101a6565b005b600060038111156100ca576100c96101b9565b5b60008054906101000a900460ff1660038111156100ea576100e96101b9565b5b0361011a5760026000806101000a81548160ff02191690836003811115610114576101136101b9565b5b02179055505b565b600060019054906101000a900460ff1681565b60008054906101000a900460ff1681565b60016003811115610154576101536101b9565b5b60008054906101000a900460ff166003811115610174576101736101b9565b5b036101a45760036000806101000a81548160ff0219169083600381111561019e5761019d6101b9565b5b02179055505b565b6000806101000a81549060ff0219169055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106101f9576101f86101b9565b5b50565b600081905061020a826101e8565b919050565b600061021a826101fc565b9050919050565b61022a8161020f565b82525050565b60006020820190506102456000830184610221565b9291505056fea2646970667358221220410e7fb43f89335c0a08efdcbd594c4c91067068363ac995d29a5f21c5efb3ce64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18 JUMPI PUSH2 0x17 PUSH2 0x8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B JUMPI PUSH2 0x3A PUSH2 0x8E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x53 JUMPI PUSH2 0x52 PUSH2 0x8E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x77 JUMPI PUSH2 0x76 PUSH2 0x8E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x281 DUP1 PUSH2 0xCC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x552670FF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x56800B52 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xA2C2D666 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xCE251A30 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xEA70A017 EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xB6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x11C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x140 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCA JUMPI PUSH2 0xC9 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEA JUMPI PUSH2 0xE9 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11A JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x154 JUMPI PUSH2 0x153 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x174 JUMPI PUSH2 0x173 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A4 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19E JUMPI PUSH2 0x19D PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1F9 JUMPI PUSH2 0x1F8 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x20A DUP3 PUSH2 0x1E8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP3 PUSH2 0x1FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A DUP2 PUSH2 0x20F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x245 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x221 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xE PUSH32 0xB43F89335C0A08EFDCBD594C4C91067068363AC995D29A5F21C5EFB3CE64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "57:1082:0:-:0;;;99:1;94:7;;;;;;;;:::i;:::-;;77:24;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;260:1;255:7;;;;;;;;:::i;:::-;;238:24;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;57:1082;;;;;;;;;;;;7:180:1;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;57:1082:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Fail_32": {
									"entryPoint": 182,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Scholarship_46": {
									"entryPoint": 320,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@e1_7": {
									"entryPoint": 303,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@e3_18": {
									"entryPoint": 284,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@idelete_53": {
									"entryPoint": 422,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Exam_$12_to_t_uint8_fromStack": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_Exam_$12__to_t_uint8__fromStack_reversed": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Exam_$12": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Exam_$12_to_t_uint8": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Exam_$12": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:955:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "243:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "279:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "279:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "279:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "266:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "273:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "263:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "263:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:20:1"
															},
															"nodeType": "YulIf",
															"src": "253:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Exam_$12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "236:5:1",
														"type": ""
													}
												],
												"src": "193:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:73:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "373:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "373:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "424:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Exam_$12",
																	"nodeType": "YulIdentifier",
																	"src": "390:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "390:40:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Exam_$12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "355:7:1",
														"type": ""
													}
												],
												"src": "311:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "507:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "517:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "555:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Exam_$12",
																	"nodeType": "YulIdentifier",
																	"src": "530:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "530:31:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "517:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Exam_$12_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "487:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "497:9:1",
														"type": ""
													}
												],
												"src": "442:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "643:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "701:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Exam_$12_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "665:35:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:42:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:55:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Exam_$12_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "638:3:1",
														"type": ""
													}
												],
												"src": "573:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:129:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "833:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "845:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "856:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "841:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "833:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "918:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "931:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "942:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "927:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Exam_$12_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "869:48:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:76:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:76:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Exam_$12__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "795:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "807:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "818:4:1",
														"type": ""
													}
												],
												"src": "720:232:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Exam_$12(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Exam_$12(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Exam_$12(value)\n    }\n\n    function convert_t_enum$_Exam_$12_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Exam_$12(value)\n    }\n\n    function abi_encode_t_enum$_Exam_$12_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Exam_$12_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Exam_$12__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Exam_$12_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063552670ff1461005c57806356800b5214610066578063a2c2d66614610084578063ce251a30146100a2578063ea70a017146100ac575b600080fd5b6100646100b6565b005b61006e61011c565b60405161007b9190610230565b60405180910390f35b61008c61012f565b6040516100999190610230565b60405180910390f35b6100aa610140565b005b6100b46101a6565b005b600060038111156100ca576100c96101b9565b5b60008054906101000a900460ff1660038111156100ea576100e96101b9565b5b0361011a5760026000806101000a81548160ff02191690836003811115610114576101136101b9565b5b02179055505b565b600060019054906101000a900460ff1681565b60008054906101000a900460ff1681565b60016003811115610154576101536101b9565b5b60008054906101000a900460ff166003811115610174576101736101b9565b5b036101a45760036000806101000a81548160ff0219169083600381111561019e5761019d6101b9565b5b02179055505b565b6000806101000a81549060ff0219169055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106101f9576101f86101b9565b5b50565b600081905061020a826101e8565b919050565b600061021a826101fc565b9050919050565b61022a8161020f565b82525050565b60006020820190506102456000830184610221565b9291505056fea2646970667358221220410e7fb43f89335c0a08efdcbd594c4c91067068363ac995d29a5f21c5efb3ce64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x552670FF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x56800B52 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xA2C2D666 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xCE251A30 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xEA70A017 EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xB6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x11C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x140 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCA JUMPI PUSH2 0xC9 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEA JUMPI PUSH2 0xE9 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11A JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x154 JUMPI PUSH2 0x153 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x174 JUMPI PUSH2 0x173 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A4 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19E JUMPI PUSH2 0x19D PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1F9 JUMPI PUSH2 0x1F8 PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x20A DUP3 PUSH2 0x1E8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP3 PUSH2 0x1FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A DUP2 PUSH2 0x20F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x245 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x221 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xE PUSH32 0xB43F89335C0A08EFDCBD594C4C91067068363AC995D29A5F21C5EFB3CE64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "57:1082:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;883:92;;;:::i;:::-;;238:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;981:97;;;:::i;:::-;;1084:52;;;:::i;:::-;;883:92;926:13;920:19;;;;;;;;:::i;:::-;;:2;;;;;;;;;;:19;;;;;;;;:::i;:::-;;;916:47;;954:9;949:2;;:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;916:47;883:92::o;238:24::-;;;;;;;;;;;;;:::o;77:::-;;;;;;;;;;;;:::o;981:97::-;1031:9;1025:15;;;;;;;;:::i;:::-;;:2;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1021:50;;1055:16;1050:2;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1021:50;981:97::o;1084:52::-;1127:2;;1120:9;;;;;;;;;;;1084:52::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:112;273:1;266:5;263:12;253:46;;279:18;;:::i;:::-;253:46;193:112;:::o;311:125::-;355:7;384:5;373:16;;390:40;424:5;390:40;:::i;:::-;311:125;;;:::o;442:::-;497:9;530:31;555:5;530:31;:::i;:::-;517:44;;442:125;;;:::o;573:141::-;665:42;701:5;665:42;:::i;:::-;660:3;653:55;573:141;;:::o;720:232::-;818:4;856:2;845:9;841:18;833:26;;869:76;942:1;931:9;927:17;918:6;869:76;:::i;:::-;720:232;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "128200",
								"executionCost": "48865",
								"totalCost": "177065"
							},
							"external": {
								"Fail()": "26617",
								"Scholarship()": "26683",
								"e1()": "2579",
								"e3()": "2610",
								"idelete()": "24452"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 99,
									"end": 100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 94,
									"end": 101,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 94,
									"end": 101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 94,
									"end": 101,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 94,
									"end": 101,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 94,
									"end": 101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 94,
									"end": 101,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 94,
									"end": 101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 94,
									"end": 101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 94,
									"end": 101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 94,
									"end": 101,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 94,
									"end": 101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 94,
									"end": 101,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 94,
									"end": 101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 77,
									"end": 101,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 77,
									"end": 101,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 77,
									"end": 101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 77,
									"end": 101,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 77,
									"end": 101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 77,
									"end": 101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 77,
									"end": 101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 77,
									"end": 101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 77,
									"end": 101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 260,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 255,
									"end": 262,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 255,
									"end": 262,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 255,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 255,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 255,
									"end": 262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 255,
									"end": 262,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 255,
									"end": 262,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 238,
									"end": 262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 238,
									"end": 262,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 238,
									"end": 262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1139,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220410e7fb43f89335c0a08efdcbd594c4c91067068363ac995d29a5f21c5efb3ce64736f6c63430008120033",
									".code": [
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "552670FF"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "56800B52"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "A2C2D666"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "CE251A30"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "EA70A017"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 883,
											"end": 975,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 883,
											"end": 975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 883,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 883,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 883,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 883,
											"end": 975,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 883,
											"end": 975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 883,
											"end": 975,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 238,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 238,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 77,
											"end": 101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 77,
											"end": 101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 981,
											"end": 1078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 883,
											"end": 975,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 883,
											"end": 975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 926,
											"end": 939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 920,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 920,
											"end": 922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 920,
											"end": 922,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 920,
											"end": 922,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 920,
											"end": 922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 920,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 916,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 916,
											"end": 963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 954,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 949,
											"end": 963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 949,
											"end": 963,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 949,
											"end": 963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 949,
											"end": 963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 949,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 949,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 949,
											"end": 963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 949,
											"end": 963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 963,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 916,
											"end": 963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 883,
											"end": 975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 77,
											"end": 101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77,
											"end": 101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 981,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 193,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 273,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 263,
											"end": 275,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 253,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 253,
											"end": 299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 279,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 279,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 297,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 279,
											"end": 297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 253,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 253,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 390,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 390,
											"end": 430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 390,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 442,
											"end": 567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 530,
											"end": 561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 517,
											"end": 561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 714,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 573,
											"end": 714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 701,
											"end": 706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 665,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 665,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 665,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 665,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 653,
											"end": 708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 573,
											"end": 714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 720,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 833,
											"end": 859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 833,
											"end": 859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 869,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 942,
											"end": 943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 927,
											"end": 944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 918,
											"end": 924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 869,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 869,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 869,
											"end": 945,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 869,
											"end": 945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"week8/lab-01-08-2023/example1_4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Fail()": "552670ff",
							"Scholarship()": "ce251a30",
							"e1()": "a2c2d666",
							"e3()": "56800b52",
							"idelete()": "ea70a017"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Fail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Scholarship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"e1\",\"outputs\":[{\"internalType\":\"enum Enum.Exam\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"e3\",\"outputs\":[{\"internalType\":\"enum Enum.Exam\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"idelete\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"week8/lab-01-08-2023/example1_4.sol\":\"Enum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"week8/lab-01-08-2023/example1_4.sol\":{\"keccak256\":\"0xff8e58bbda3e4abb1f913ad19681e788534b7bca6d6f100758b0ed4d80375747\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6951f85080839457ab889d88b0187ddce00d534e3848ae8a40e43cdbfd5d5f92\",\"dweb:/ipfs/QmQ7niNg8K1SGJnDhhLAtMSdiXjamAkrBW7pMfnbrivL5g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "week8/lab-01-08-2023/example1_4.sol:Enum",
								"label": "e1",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Exam)12"
							},
							{
								"astId": 18,
								"contract": "week8/lab-01-08-2023/example1_4.sol:Enum",
								"label": "e3",
								"offset": 1,
								"slot": "0",
								"type": "t_enum(Exam)12"
							}
						],
						"types": {
							"t_enum(Exam)12": {
								"encoding": "inplace",
								"label": "enum Enum.Exam",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"week8/lab-01-08-2023/example1_4.sol": {
				"ast": {
					"absolutePath": "week8/lab-01-08-2023/example1_4.sol",
					"exportedSymbols": {
						"Enum": [
							54
						]
					},
					"id": 55,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Enum",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 54,
							"linearizedBaseContracts": [
								54
							],
							"name": "Enum",
							"nameLocation": "66:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a2c2d666",
									"id": 7,
									"mutability": "mutable",
									"name": "e1",
									"nameLocation": "89:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 54,
									"src": "77:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Exam_$12",
										"typeString": "enum Enum.Exam"
									},
									"typeName": {
										"id": 3,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2,
											"name": "Exam",
											"nameLocations": [
												"77:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 12,
											"src": "77:4:0"
										},
										"referencedDeclaration": 12,
										"src": "77:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Exam_$12",
											"typeString": "enum Enum.Exam"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "99:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 4,
											"name": "Exam",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 12,
											"src": "94:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Exam_$12_$",
												"typeString": "type(enum Enum.Exam)"
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "94:7:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Exam_$12",
											"typeString": "enum Enum.Exam"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Enum.Exam",
									"id": 12,
									"members": [
										{
											"id": 8,
											"name": "Checking",
											"nameLocation": "169:8:0",
											"nodeType": "EnumValue",
											"src": "169:8:0"
										},
										{
											"id": 9,
											"name": "Pass",
											"nameLocation": "187:4:0",
											"nodeType": "EnumValue",
											"src": "187:4:0"
										},
										{
											"id": 10,
											"name": "Fail",
											"nameLocation": "201:4:0",
											"nodeType": "EnumValue",
											"src": "201:4:0"
										},
										{
											"id": 11,
											"name": "Scholarship",
											"nameLocation": "215:11:0",
											"nodeType": "EnumValue",
											"src": "215:11:0"
										}
									],
									"name": "Exam",
									"nameLocation": "154:4:0",
									"nodeType": "EnumDefinition",
									"src": "149:83:0"
								},
								{
									"constant": false,
									"functionSelector": "56800b52",
									"id": 18,
									"mutability": "mutable",
									"name": "e3",
									"nameLocation": "250:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 54,
									"src": "238:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Exam_$12",
										"typeString": "enum Enum.Exam"
									},
									"typeName": {
										"id": 14,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 13,
											"name": "Exam",
											"nameLocations": [
												"238:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 12,
											"src": "238:4:0"
										},
										"referencedDeclaration": 12,
										"src": "238:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Exam_$12",
											"typeString": "enum Enum.Exam"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "33",
												"id": 16,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "260:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												}
											],
											"id": 15,
											"name": "Exam",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 12,
											"src": "255:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Exam_$12_$",
												"typeString": "type(enum Enum.Exam)"
											}
										},
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "255:7:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Exam_$12",
											"typeString": "enum Enum.Exam"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "906:69:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Exam_$12",
														"typeString": "enum Enum.Exam"
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 21,
														"name": "e1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "920:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$12",
															"typeString": "enum Enum.Exam"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 22,
															"name": "Exam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "926:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Exam_$12_$",
																"typeString": "type(enum Enum.Exam)"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "931:8:0",
														"memberName": "Checking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "926:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$12",
															"typeString": "enum Enum.Exam"
														}
													},
													"src": "920:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 30,
												"nodeType": "IfStatement",
												"src": "916:47:0",
												"trueBody": {
													"expression": {
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 25,
															"name": "e1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "949:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Exam_$12",
																"typeString": "enum Enum.Exam"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 26,
																"name": "Exam",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "954:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Exam_$12_$",
																	"typeString": "type(enum Enum.Exam)"
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "959:4:0",
															"memberName": "Fail",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "954:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Exam_$12",
																"typeString": "enum Enum.Exam"
															}
														},
														"src": "949:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$12",
															"typeString": "enum Enum.Exam"
														}
													},
													"id": 29,
													"nodeType": "ExpressionStatement",
													"src": "949:14:0"
												}
											}
										]
									},
									"functionSelector": "552670ff",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Fail",
									"nameLocation": "892:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:0:0"
									},
									"scope": 54,
									"src": "883:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1011:67:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Exam_$12",
														"typeString": "enum Enum.Exam"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "e1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1025:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$12",
															"typeString": "enum Enum.Exam"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 36,
															"name": "Exam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1031:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Exam_$12_$",
																"typeString": "type(enum Enum.Exam)"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1036:4:0",
														"memberName": "Pass",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "1031:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$12",
															"typeString": "enum Enum.Exam"
														}
													},
													"src": "1025:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1021:50:0",
												"trueBody": {
													"expression": {
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 39,
															"name": "e1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1050:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Exam_$12",
																"typeString": "enum Enum.Exam"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 40,
																"name": "Exam",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "1055:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Exam_$12_$",
																	"typeString": "type(enum Enum.Exam)"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1060:11:0",
															"memberName": "Scholarship",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 11,
															"src": "1055:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Exam_$12",
																"typeString": "enum Enum.Exam"
															}
														},
														"src": "1050:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$12",
															"typeString": "enum Enum.Exam"
														}
													},
													"id": 43,
													"nodeType": "ExpressionStatement",
													"src": "1050:21:0"
												}
											}
										]
									},
									"functionSelector": "ce251a30",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Scholarship",
									"nameLocation": "990:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1001:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:0"
									},
									"scope": 54,
									"src": "981:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1110:26:0",
										"statements": [
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1120:9:0",
													"subExpression": {
														"id": 49,
														"name": "e1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1127:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$12",
															"typeString": "enum Enum.Exam"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1120:9:0"
											}
										]
									},
									"functionSelector": "ea70a017",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "idelete",
									"nameLocation": "1093:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1100:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:0"
									},
									"scope": 54,
									"src": "1084:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 55,
							"src": "57:1082:0",
							"usedErrors": []
						}
					],
					"src": "31:1109:0"
				},
				"id": 0
			}
		}
	}
}